@model Laobian.Share.Model.Jarvis.NoteRuntime
@inject IOptions<JarvisOptions> _option
@{
    Layout = "_NoteLayout";
    ViewData["Title"] = $"笔记：{Model.Raw.Title}";
}
<h2 class="mb-3">
    @Model.Raw.Title
</h2>
<hr/>
<article class="article-content">
    @Html.Raw(Model.HtmlContent)
</article>

<div class="modal h-100" id="imgModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="modal-content" class="img-fluid"/>
            </div>
            <div class="modal-footer justify-content-center" id="modal-caption">
            </div>
        </div>
    </div>
</div>

@section Aside{
    <div class="d-grid mb-3">
        <a class="btn btn-outline-success" href="@_option.Value.AdminRemoteEndpoint/note/post/@Model.Raw.Id/update"><i class="fas fa-edit"></i> 编辑笔记</a>
    </div>

    @if (Model.Tags.Any())
    {
        <div class="card mb-3">
            <div class="card-body">
                <i class="fas fa-tags"></i> 标签： @Html.Raw(Model.GetTagHtml())
            </div>
        </div>
    }

    @if (Model.Outlines.Any())
    {
        <div class="list-group mb-3" id="aside_note">
            @foreach (var item in Model.Outlines)
            {
                <a class="list-group-item list-group-item-action" href="#@item.Link">@item.Title</a>
            }

        </div>
    }

    <div class="list-group">
        <div class="list-group-item"><i class="fas fa-calendar-plus"></i> 创建于：@Model.Raw.CreateTime.ToDateAndTime()</div>
        <div class="list-group-item"><i class="fas fa-calendar-check"></i> 修改于：@Model.Raw.LastUpdateTime.ToDateAndTime()</div>
    </div>
}

@section Script{
    <script>
        document.addEventListener("DOMContentLoaded",
            function() {
                anchors.options = {
                    placement: 'right',
                    visible: 'hover',
                    base: '@Model.Raw.GetFullPath(_option.Value.JarvisRemoteEndpoint)'
                };
                anchors.add('.article-content h3, .article-content h4');

                hljs.highlightAll();
                @if (Model.Outlines.Any())
                {
                    <text>setScrollspy("#aside_note");</text>
                }
                
                try {
                    let modalEl = document.querySelector("#imgModal");
                    if (modalEl) {
                        let modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                        let images = document.querySelectorAll(".article-content img");
                        var modalImg = document.querySelector("#modal-content");
                        var caption = document.querySelector("#modal-caption");
                        images.forEach(function(img) {
                            img.onclick = function() {
                                modal.show();
                                modalImg.src = this.src;
                                caption.innerHTML = this.alt;
                            };
                        });
                    }
                } catch (e) {
                    console.log(e);
                }
            });
    </script>
}