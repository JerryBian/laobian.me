@model List<LaobianLog>
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "日志";
}

<p class="font-monospace" id="levels">
    <a href="javascript:;" class="text-dark" onclick="clickLink(this)">All:  @Model.Count()</a> &middot;
    <a href="javascript:;" class="text-info" onclick="clickLink(this)" data-card-selector="info">Info:  @Model.Count(x => x.Level == LogLevel.Information)</a> &middot;
    <a href="javascript:;" class="text-warning" onclick="clickLink(this)" data-card-selector="warn">Warn: @Model.Count(x => x.Level == LogLevel.Warning)</a> &middot;
    <a class="text-danger" href="javascript:;" onclick="clickLink(this)" data-card-selector="error">Error: @Model.Count(x => x.Level == LogLevel.Error)</a>
</p>

<div id="logs">
    @foreach (var item in Model)
    {
        var c = "";
        var s = "info";
        if (item.Level == LogLevel.Warning)
        {
            c = "border-warning";
            s = "warn";
        }

        if (item.Level == LogLevel.Error)
        {
            c = "border-danger";
            s = "error";
        }

        <div class="card mb-3 @c" data-card-selector="@s">
            <div class="card-body">
                <h6 class="card-subtitle mb-2 text-muted"><i class="bi bi-calendar2-date"></i> @item.Timestamp.ToFullDateTime()</h6>
                <p class="card-text">@item.Message</p>
                @if (!string.IsNullOrEmpty(item.Exception))
                {
                    var id = StringHelper.Random();
                    <p><button class="btn btn-danger" type="button" data-bs-toggle="collapse" data-bs-target="#details-@id" aria-expanded="false">Toggle Exception</button></p>
                    <div class="collapse" id="details-@id">
                        <pre>@item.Exception</pre>
                    </div>
                }
            </div>
        </div>
    }
</div>

@section Script{
    <script>
        function activeLink(ele) {
            document.querySelectorAll("#levels a").forEach(x => {
                if (x.classList.contains("fst-italic")) {
                    x.classList.remove("fst-italic");
                }

                if (x.classList.contains("fw-bold")) {
                    x.classList.remove("fw-bold");
                }
            });

            ele.classList.add("fst-italic");
            ele.classList.add("fw-bold");
        }

        function clickLink(ele) {
            activeLink(ele);
            let l = ele.dataset.cardSelector;

            document.querySelectorAll("#logs div.card").forEach(x =>
            {
                if(!l || l.length <= 0){
                    // show all levels
                    if(x.classList.contains("d-none")) {
                        x.classList.remove("d-none");
                    }

                    return;
                }

                let selector = x.dataset.cardSelector;
                if(l === selector) {
                    if (x.classList.contains("d-none")) {
                        x.classList.remove("d-none");
                    }
                } else {
                    if (!x.classList.contains("d-none")) {
                        x.classList.add("d-none");
                    }
                }
                
            });
        }

        activeLink(document.querySelector("#levels .text-dark"));
    </script>
            }