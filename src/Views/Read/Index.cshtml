@model List<ReadModel>
@{
    //Layout = "_ReadLayout";
    //ViewData["DatePublished"] = Model.SelectMany(x => x.Items).Min(x => x.Raw.CreateTime);
    //ViewData["DateModified"] = Model.SelectMany(x => x.Items).Max(x => x.Raw.LastUpdateTime);
}

@foreach (var item in Model.GroupBy(x => x.Object.CreateTime.Year).OrderByDescending(x => x.Key))
{
    <div class="mb-">
        <h4 class="mb-3 bg-secondary py-2 px-1" id="@item.Key"><i class="bi bi-chevron-bar-down small text-muted"></i> @item.Key 年 (@item.Count())</h4>
        @foreach (var r in item.OrderByDescending(x => x.Object.CreateTime))
        {
            var d = "bi bi-hash small text-muted";
            if (!r.Object.IsPublic)
            {
                d = "bi bi-file-lock small text-info";
            }

            <div class="mb-3 read-item" onclick="showInfo(this)">
                <div class="d-flex ps-2 pe-1">
                    <div class="text-truncate">
                        <span>
                            <i class="@d"></i> @r.Object.BookName <i class="text-muted small">(@r.Object.CreateTime.ToCnDate(true))</i>
                        </span>
                        @if (r.Object.Grade == 2)
                        {
                            <i class="bi bi-hand-thumbs-up text-success text-decoration-none small"></i>
                        }

                        @if (r.Object.Grade == 0)
                        {
                            <i class="bi bi-hand-thumbs-down text-danger text-decoration-none small"></i>
                        }
                    </div>
                    <div class="ms-auto small text-muted px-1 text-nowrap">
                        @if (Context.Request.HttpContext.User?.Identity?.IsAuthenticated == true)
                        {
                            <a href="/read/edit/@r.Object.Id"><i class="bi bi-pencil-square text-success"></i></a>
                        }
                    </div>
                </div>

                <div class="d-none">
                    <div class="read-item-modal-header"><div><i class="@d"></i> @r.Object.BookName</div></div>
                    <div class="read-item-modal-body">
                        <small class="text-muted fst-italic d-none d-lg-inline-block px-1"> @r.Metadata</small>
                        @if (!string.IsNullOrEmpty(r.CommentHtml))
                        {
                            <div class="my-1 small py-2">
                                @Html.Raw(r.CommentHtml)
                            </div>
                        }
                    </div>
                </div>
            </div>

        }
    </div>
}

@section Script {
    <script>
        document.addEventListener('DOMContentLoaded', function (event) {
            anchors.options = {
                placement: "right",
                visible: "hover",
                icon: "¶",
                base: "/read",
                class: "text-reset"
            };
            anchors.add("h4");
        });

        function showInfo(ele){
            let modalHeader = ele.querySelector(".read-item-modal-header");
            let modalBody = ele.querySelector(".read-item-modal-body");
            showMessageModal(modalHeader.innerHTML, modalBody.innerHTML);
        }
    </script>
}