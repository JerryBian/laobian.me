@model BlogPost

<div class="container">
    <fieldset>
        <legend>编辑文章</legend>
        <form class="needs-validation" novalidate>
            <div class="mb-3">
                <label for="title" class="form-label">文章标题</label>
                <input type="text" class="form-control" id="title" name="title" placeholder="文章标题" autocomplete="off" value="@Model.Object.Title" autofocus required>
                <div class="invalid-feedback">
                    必填
                </div>
            </div>
            <div class="mb-3">
                <label for="link" class="form-label">文章链接</label>
                <input type="text" class="form-control" id="link" name="link" placeholder="文章链接" value="@Model.Object.Link" autocomplete="off" required>
                <div class="invalid-feedback">
                    必填
                </div>
            </div>
            <div class="mb-3">
                <label for="publishTime" class="form-label">发布时间</label>
                <input type="date" class="form-control" id="publishTime" name="publishTime" value="@Model.Object.PublishTime.ToDate()" autocomplete="off">
            </div>
            <div class="mb-3">
                <label for="accessCount" class="form-label">访问数量</label>
                <input type="number" class="form-control" id="accessCount" name="accessCount" value="@Model.Object.AccessCount" min="0" step="1" autocomplete="off">
            </div>
            <div class="mb-3">
                <label for="series" class="form-label">文章系列</label>
                <select class="form-select font-monospace" id="series" name="series">
                    @if (!((List<BlogSeries>)(ViewBag.Series)).Any())
                    {
                        <option selected value="" class="small">-- 选择博客系列 --</option>
                    }
                    else
                    {
                        <option value="" class="small">-- 选择博客系列 --</option>
                    }


                    @foreach (var p in ViewBag.Series)
                    {
                        if (Model.Object.Series == p.Object.Id)
                        {
                            <option value="@p.Object.Id" selected>@p.Object.Name</option>
                        }
                        else
                        {
                            <option value="@p.Object.Id">@p.Object.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="tags" class="form-label">文章标签</label>
                <select class="form-select font-monospace" id="tags" name="tags" multiple size="10">
                    @if (!((List<BlogTag>)(ViewBag.Tags)).Any())
                    {
                        <option selected value="" class="small">-- 选择博客标签（支持多选） --</option>
                    }
                    else
                    {
                        <option value="" class="small">-- 选择博客标签（支持多选） --</option>
                    }


                    @foreach (var p in ViewBag.Tags)
                    {
                        if (Model.Object.Tags.Contains(p.Object.Id))
                        {
                            <option value="@p.Object.Id" selected>@p.Object.Name</option>
                        }
                        else
                        {
                            <option value="@p.Object.Id">@p.Object.Name</option>
                        }
                    }
                </select>
            </div>
            <div class="mb-3">
                <label for="mdContent" class="form-label">文章内容</label>
                <textarea id="mdContent"></textarea>
            </div>
            <div class="form-check form-switch mb-3">
                @if (Model.Object.IsTopping)
                {
                    <input class="form-check-input" type="checkbox" id="isTopping" name="isTopping" checked>
                }
                else
                {
                    <input class="form-check-input" type="checkbox" id="isTopping" name="isTopping">
                }
                <label class="form-check-label" for="isTopping">置顶</label>
            </div>
            <div class="form-check form-switch mb-3">
                @if (Model.Object.IsPublic)
                {
                    <input class="form-check-input" type="checkbox" id="isPublic" name="isPublic" checked>
                }
                else
                {
                    <input class="form-check-input" type="checkbox" id="isPublic" name="isPublic">
                }
                <label class="form-check-label" for="isPublic">公开发布</label>
            </div>
            <div class="form-check form-switch mb-3">
                @if (Model.Object.ContainsMath)
                {
                    <input class="form-check-input" type="checkbox" id="containsMath" name="containsMath" checked>
                }
                else
                {
                    <input class="form-check-input" type="checkbox" id="containsMath" name="containsMath">
                }
                <label class="form-check-label" for="containsMath">包含数学公式</label>
            </div>
            <input type="hidden" name="id" value="@Model.Object.Id" />
            <div class="d-grid">
                <button type="submit" class="btn btn-primary btn-lg">提交</button>
            </div>
        </form>
    </fieldset>
</div>

@section Script {
    <script>
        activeNavItem("#nav_admin");
        let editor = createEditor(document.querySelector("#mdContent"), "edit_post_@Model.Object.Id");
        let txt = document.createElement("textarea");
        txt.innerHTML = "@Model.Object.MdContent";
        editor.value(txt.value);
        const form = document.querySelector("form");
        form.addEventListener('submit',
            function (event) {
                event.preventDefault();
                event.stopPropagation();
                var formData = new FormData(form);
                formData.append("mdContent", editor.value());
                submitRequest("/blog/post", { form: form, method: "POST", body: new URLSearchParams(formData), contentType: "application/x-www-form-urlencoded" });
            });
    </script>
}