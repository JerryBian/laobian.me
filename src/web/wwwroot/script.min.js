function setActive(ele){ele&&("function"==typeof ele.forEach?ele.forEach(x=>{setActive(x)}):ele.classList.contains("active")||ele.classList.add("active"))}function showModalDialog(title,body){var id=makeId(),title=`<div class="modal" tabindex="-1" id="${id}">
  <div class="modal-dialog modal-dialog-scrollable modal-dialog-centered modal-fullscreen-md-down">
    <div class="modal-content">
      <div class="modal-header border-bottom">
        <div class="modal-title fs-5">${title}</div>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body post">
        ${body}
      </div>
    </div>
  </div>
</div>`;document.querySelector("#temp").innerHTML=title,bootstrap.Modal.getOrCreateInstance(document.querySelector("#"+id)).show()}function showErrorToast(message){showToast("Error","text-bg-danger",message)}function showInfoToast(message){showToast("Information","text-bg-success",message)}function hideEle(ele){ele.classList.contains("d-none")||ele.classList.add("d-none")}function showEle(ele){ele.classList.contains("d-none")&&ele.classList.remove("d-none")}function toggleEle(ele){ele.classList.contains("d-none")?ele.classList.remove("d-none"):ele.classList.add("d-none")}function toggleLoadingSpinner(){toggleEle(document.querySelector("#loadingSpinner"))}function searchChildren(id,txt,filterFunc,sortAttr){try{toggleLoadingSpinner();var ele=document.querySelector(id),children=Array.prototype.slice.call(ele.children,0);if(children.forEach(x=>{filterFunc&&!filterFunc(x)?hideEle(x):(!txt||(hideEle(x),0<=(x.innerText||x.textContent).search(new RegExp(txt,"i"))))&&showEle(x)}),sortAttr){children.sort((a,b)=>{a=a.getAttribute(sortAttr);return b.getAttribute(sortAttr)-a});let html="";ele.innerHTML="",children.forEach(x=>html+=x.outerHTML),ele.innerHTML=html}}finally{toggleLoadingSpinner()}}function showToast(title,headerClass,message){var id=makeId(),headerClass=`<div class="toast-container position-fixed bottom-0 end-0 p-3 ">
  <div id="${id}" class="toast" role="alert" aria-live="assertive" aria-atomic="true" data-bs-delay="30000">
    <div class="toast-header ${headerClass}">
      <i class="bi bi-bell me-2"></i>
      <strong class="me-auto">${title}</strong>
      <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
    </div>
    <div class="toast-body ">
      ${message}
    </div>
  </div>
</div>`;document.querySelector("#temp").innerHTML=headerClass,bootstrap.Toast.getOrCreateInstance(document.querySelector("#"+id)).show()}function makeId(){return"id"+Math.random().toString(16).slice(2)}