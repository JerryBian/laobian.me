@inject IOptions<SwanOption> _option
@{
    var title = ViewData["Title"] == null ? _option.Value.Title : $"{ViewData["Title"]} - {_option.Value.Title}";
    var description = ViewData["Description"] == null ? _option.Value.Description : ViewData["Description"].ToString();
}
<!DOCTYPE html>
<html lang="zh">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@title</title>
    <link rel="apple-touch-icon" sizes="180x180" href="/static/icon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/static/icon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/static/icon/favicon-16x16.png">
    <link rel="manifest" href="/static/icon/site.webmanifest">
    <link rel="mask-icon" href="/static/icon/safari-pinned-tab.svg" color="#5bbad5">
    <link rel="shortcut icon" href="/static/icon/favicon.ico">
    <meta name="msapplication-TileColor" content="#da532c">
    <meta name="msapplication-config" content="/static/icon/browserconfig.xml">
    <meta name="theme-color" content="#ffffff">
    <meta name="description" content="@description" />
    
    @await RenderSectionAsync("Style", false)

    @if (!Context.IsAuthorized() && ViewData["EnableSEO"]?.ToString() == bool.TrueString)
    {
        <meta property="og:type" content="website" />
        <meta property="og:url" content="@_option.Value.BaseUrl@ViewData["Url"]" />
        <meta property="og:site_name" content="@_option.Value.Title" />
        <meta name="og:title"" content="@title"">
        <meta property="og:image" itemprop="image primaryImageOfPage" content="@_option.Value.BaseUrl/static/icon/site.png" />
        <meta name="og:description" content="@description">
    }
    else
    {
        <meta name="robots" content="noindex,nofollow,noarchive" />
    }
</head>
<body class="d-flex min-vh-100 w-100 flex-column">
    @RenderBody()

    <div id="temp"></div>
    @await RenderSectionAsync("Script", false)
</body>
</html>
