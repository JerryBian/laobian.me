@inject IOptions<LaobianOption> _option
@inject IHostEnvironment _env
<!DOCTYPE html>
<html lang="zh">
<head>
    @{
        var buildOption = new HtmlHeadBuildOption
            {
                ApplicationTitleColor = "#da532c",
                Description = ViewData["Description"]?.ToString(),
                RobotsEnabled = bool.TryParse(ViewData["RobotsEnabled"]?.ToString(), out var result) ? result : _env.IsProduction() && Context.User.Identity?.IsAuthenticated != true,
                SafariPinnedTabColor = "#5bbad5",
                ThemeColor = "#ffffff",
                Title = ViewData["Title"]?.ToString(),
                BaseTitle = _option.Value.Title,
                BaseImage = $"{_option.Value.BaseUrl}/file/icon/android-chrome-512x512.png",
                Image = ViewData["Image"]?.ToString(),
                DatePublished = ViewData["DatePublished"] == null ? DateTime.Now : Convert.ToDateTime(ViewData["DatePublished"]),
                DateModified = ViewData["DateModified"] == null ? DateTime.Now : Convert.ToDateTime(ViewData["DateModified"])
            };

        var headerBuilder = new HtmlHeadBuilder(_option.Value, buildOption);
        @Html.Raw(headerBuilder.Build())
    }

    @await RenderSectionAsync("Style", false)
</head>
<body class="w-100 min-vh-100">
    @RenderBody()
    @await RenderSectionAsync("Script", false)

    @if (_env.IsProduction())
    {
        <!-- Google tag (gtag.js) -->
        <script async src="https://www.googletagmanager.com/gtag/js?id=G-ZB78XKVE3V"></script>
        <script>
            window.dataLayer = window.dataLayer || [];
            function gtag() { dataLayer.push(arguments); }
            gtag('js', new Date());

            gtag('config', 'G-ZB78XKVE3V');
        </script>
    }
</body>
</html>