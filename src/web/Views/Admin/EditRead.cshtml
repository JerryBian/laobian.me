@inject ISwanService _swanService
@model SwanRead
@{
    Layout = "_LayoutAdmin";
}

<div class="my-4 p-3 rounded-1 shadow-sm bg-white">
    <div class="form-text mb-2">
        <span class="text-danger">*</span>
        Below fields are all required.
    </div>
    <div class="mb-3">
        <label for="bookName" class="form-label">Book Name</label>
        <input type="text" class="form-control" id="bookName" name="bookName" placeholder="" autocomplete="off" value="@Model.BookName" autofocus required>
        <div class="invalid-feedback">
            Required
        </div>
    </div>
    <div class="mb-3">
        <label for="author" class="form-label">Author</label>
        <input type="text" class="form-control" id="author" name="author" placeholder="" autocomplete="off" value="@Model.Author" required>
        <div class="invalid-feedback">
            Required
        </div>
    </div>
</div>
<div class="accordion my-4 p-3 rounded-1 shadow-sm bg-white">
    <div class="accordion-item">
        <h2 class="accordion-header" id="headingOne">
            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                Optional Fields
            </button>
        </h2>
        <div id="collapseOne" class="accordion-collapse collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
            <div class="accordion-body">
                <div class="mb-3">
                    <label for="authorCountry" class="form-label">Author Country</label>
                    <input type="text" class="form-control" id="authorCountry" name="authorCountry" placeholder="" autocomplete="off" value="@Model.AuthorCountry">
                </div>
                <div class="mb-3">
                    <label for="translator" class="form-label">Translator</label>
                    <input type="text" class="form-control" id="translator" name="translator" placeholder="" autocomplete="off" value="@Model.Translator">
                </div>
                <div class="mb-3">
                    <label for="comment" class="form-label">comment</label>
                    <textarea id="comment"></textarea>
                </div>
                <div class="mb-3">
                    <label for="posts" class="form-label">Linked Posts</label>
                    <select class="form-select font-monospace" id="posts" name="posts" multiple size="5">
                        @if (Model.Posts?.Any() == true)
                        {
                            <option value="" class="small">-- 选择博客文章（支持多选） --</option>
                        }
                        else
                        {
                            <option selected value="" class="small">-- 选择博客文章（支持多选） --</option>
                        }

                        @foreach (var p in await _swanService.FindAsync<SwanPost>(true))
                        {
                            if (Model.Posts.Contains(p.Id))
                            {
                                <option selected value="@p.Id" class="my-1 ps-1">@p.Title</option>
                            }
                            else
                            {
                                <option value="@p.Id" class="my-1 ps-1">@p.Title</option>
                            }

                        }
                    </select>
                </div>
                <div class="mb-3">
                    <label for="grade" class="form-label">Grade</label>
                    <input type="number" class="form-control" id="grade" name="grade" value="@Model.Grade" min="-1" max="1" step="1" autocomplete="off" aria-describedby="gradeHelp">
                    <div id="gradeHelp" class="form-text"> Less than 0：差评；=0：一般般；Greter than 0：好评</div>
                </div>
                <div class="form-check form-switch mb-3">
                    @if (Model.IsPublic)
                    {
                        <input checked class="form-check-input" type="checkbox" id="isPublic" name="isPublic">
                    }
                    else
                    {
                        <input class="form-check-input" type="checkbox" id="isPublic" name="isPublic">
                    }

                    <label class="form-check-label" for="isPublic">Public to Everyone</label>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" name="id" value="@Model.Id" />

@section AdminLegend {
    <div class="row">
        <div class="col-3 text-truncate">
            <span><i class="bi bi-pencil-square"></i> Edit read</span>
        </div>
        <div class="col-9 text-end">
            <button type="submit" class="btn btn-success"><i class="bi bi-floppy mx-1"></i> Save Changes</button>
        </div>
    </div>
}

@section Script {
    <script>
        const form = document.querySelector("#adminForm");
        const commentEl = document.querySelector("#comment");
        const editor = createEditor(commentEl, "admin_read_add");

        let txt = document.createElement("textarea");
        txt.innerHTML = "@Model.Comment";
        editor.value(txt.value);

        form.addEventListener("submit", e => {
            e.preventDefault();
            e.stopPropagation();

            let formData = new FormData(form);
            formData.append("comment", editor.value());
            submitRequest("/admin/read-edit", { form: form, method: "POST", body: new URLSearchParams(formData), contentType: "application/x-www-form-urlencoded" });
        });

        setActive(document.querySelector("#navHeading_reads"));
    </script>
}