@model PostViewModel
@inject IOptions<BlogOption> Config
@{
    ViewData["Title"] = Model.Current.Raw.Title;
    ViewData["Image"] = Model.Current.ThumbnailImageUrl;
    ViewData["DatePublished"] = Model.Current.Raw.PublishTime;
    ViewData["DateModified"] = Model.Current.Raw.LastUpdateTime;
}

<div>
    <div class="mb-3">
        <div class="text-muted fs-sm">@Html.Raw(Model.MetadataHtml)</div>
        <h2 class="mb-3">
            <span>
                @Model.Current.Raw.Title

            </span>
            @if (Model.Current.Raw.IsTopping)
            {
                <span class="badge bg-success fs-sm">置顶</span>
            }

            @if (!Model.Current.Raw.IsPublished)
            {
                <span class="badge bg-warning fs-sm">
                    未发布
                </span>
            }
        </h2>
    </div>
    <div class="post-content" data-bs-spy="scroll" data-bs-target="#aside_post" data-bs-offset="10">
        @Html.Raw(Model.Current.HtmlContent)
        <p class="text-muted">（本文完）</p>
    </div>

    <div class="alert alert-warning post-alert fs-sm" role="alert">
        <ul>
            <li>最后更新于：<span title="@Model.Current.Raw.LastUpdateTime.ToChinaDateAndTime()">@Model.Current.Raw.PublishTime.ToChinaDate()</span></li>
            @{
                var html = Model.TagHtml;
                if (!string.IsNullOrEmpty(html))
                {
                    <li>@Html.Raw(html)</li>
                }
            }

            @if (Model.Previous != null)
            {
                <li>前一篇：<a href="@Model.Previous.Raw.GetFullPath(Config.Value.BlogRemoteEndpoint)" class="text-decoration-none">@Model.Previous.Raw.Title</a></li>
            }

            @if (Model.Next != null)
            {
                <li>后一篇：<a href="@Model.Next.Raw.GetFullPath(Config.Value.BlogRemoteEndpoint)" class="text-decoration-none">@Model.Next.Raw.Title</a></li>
            }
            <li>
                文章的留言，请发送电子邮件至
                <a href="mailto:@Config.Value.AdminEmail?subject=RE:@Model.Current.Raw.Title&body=Good job！" class="text-decoration-none">
                    @Config.Value.AdminEmail
                </a>
            </li>
        </ul>
    </div>
</div>

<div class="modal h-100" id="imgModal" tabindex="-1">
    <div class="modal-dialog modal-dialog-centered modal-dialog-scrollable modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <img id="modal-content" class="img-fluid"/>
            </div>
            <div class="modal-footer justify-content-center" id="modal-caption">
            </div>
        </div>
    </div>
</div>

@section Script {
    <script>

        document.addEventListener("DOMContentLoaded",
            function() {
                anchors.options = {
                    placement: 'right',
                    visible: 'hover',
                    base: '@Model.Current.Raw.GetFullPath(Config.Value.BlogRemoteEndpoint)'
                };
                anchors.add('.post-content h3, .post-content h4');

                hljs.highlightAll();
                try {
                    let modalEl = document.querySelector("#imgModal");
                    if (modalEl) {
                        let modal = bootstrap.Modal.getOrCreateInstance(modalEl);
                        let images = document.querySelectorAll(".post-content img");
                        var modalImg = document.querySelector("#modal-content");
                        var caption = document.querySelector("#modal-caption");
                        images.forEach(function(img) {
                            img.onclick = function() {
                                modal.show();
                                modalImg.src = this.src;
                                caption.innerHTML = this.alt;
                            };
                        });
                    }
                } catch (e) {
                    console.log(e);
                }
            });
    </script>
    @if (Model.Current.Raw.ContainsMath)
    {
        <script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
    }
}

@section Aside{
    @if (Model.Current.Outlines.Any())
    {
        <div class="list-group" id="aside_post">
            @foreach (var item in Model.Current.Outlines)
            {
                <a class="list-group-item list-group-item-action" href="#@item.Link">@item.Title</a>
            }

        </div>
    }
}