name: master

on:
  push:
    branches: [ master ]

jobs:
  publish_api:
    name: Publish API images
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup environment variables
        run: |
          APP_VERSION=`cat VERSION`
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Build and push API images
        id: docker_build_api
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.api
          push: true
          build-args: |
            ver=${{ env.APP_VERSION }}
          tags: |
            cnbian/laobian-api:${{ env.APP_VERSION }}
            cnbian/laobian-api:latest
            ghcr.io/jerrybian/laobian-api:${{ env.APP_VERSION }}
            ghcr.io/jerrybian/laobian-api:latest

  publish_admin:
    name: Publish ADMIN images
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup environment variables
        run: |
          APP_VERSION=`cat VERSION`
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Build and push ADMIN images
        id: docker_build_admin
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.admin
          push: true
          build-args: |
            ver=${{ env.APP_VERSION }}
          tags: |
            cnbian/laobian-admin:${{ env.APP_VERSION }}
            cnbian/laobian-admin:latest
            ghcr.io/jerrybian/laobian-admin:${{ env.APP_VERSION }}
            ghcr.io/jerrybian/laobian-admin:latest

  publish_jarvis:
    name: Publish JARVIS images
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup environment variables
        run: |
          APP_VERSION=`cat VERSION`
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Build and push JARVIS images
        id: docker_build_jarvis
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.jarvis
          push: true
          build-args: |
            ver=${{ env.APP_VERSION }}
          tags: |
            cnbian/laobian-jarvis:${{ env.APP_VERSION }}
            cnbian/laobian-jarvis:latest
            ghcr.io/jerrybian/laobian-jarvis:${{ env.APP_VERSION }}
            ghcr.io/jerrybian/laobian-jarvis:latest

  publish_blog:
    name: Publish BLOG images
    runs-on: ubuntu-20.04
    permissions:
      packages: write
      contents: write

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USER }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Setup environment variables
        run: |
          APP_VERSION=`cat VERSION`
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: Build and push BLOG images
        id: docker_build_blog
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile.blog
          push: true
          build-args: |
            ver=${{ env.APP_VERSION }}
          tags: |
            cnbian/laobian-blog:${{ env.APP_VERSION }}
            cnbian/laobian-blog:latest
            ghcr.io/jerrybian/laobian-blog:${{ env.APP_VERSION }}
            ghcr.io/jerrybian/laobian-blog:latest

      - name: Deploy GitHub Pages ðŸš€
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          folder: src/blog/wwwroot/dist
          target-folder: blog/${{ env.APP_VERSION }}

  deploy_server:
    name: Deploy to remote server
    runs-on: ubuntu-20.04
    needs: [publish_api, publish_admin, publish_blog, publish_jarvis]

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup environment variables
        run: |
          APP_VERSION=`cat VERSION`
          echo "APP_VERSION=$APP_VERSION" >> $GITHUB_ENV

      - name: deploy server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          password: ${{ secrets.VPS_SSH_PASSWORD }}
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            sh /ga/deploy-laobian.sh prod ${{ env.APP_VERSION }}