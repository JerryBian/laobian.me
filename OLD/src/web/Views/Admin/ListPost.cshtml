@inject ISwanService _service
@{
    Layout = "_LayoutAdmin";
    var allPosts = await _service.FindAsync<SwanPost>(true);
    ViewData["Title"] = "List Posts :: Admin";
}

<div class="my-4 py-3 rounded-1 shadow-sm bg-white">
    <div class="list-group list-group-flush" id="listWrapper">
        @foreach (var item in allPosts)
        {
            var privateStype = item.IsPublicToEveryOne() ? "" : "bg-warning-subtle";
            <div class="list-group-item @privateStype" data-sort-hit="@item.PageStat.Hit" data-sort-date="@item.PublishDate.Ticks" data-filter-is-public="@item.IsPublicToEveryOne()">
                @Html.Raw(item.HtmlMetadata1)
                <div class="container-fluid px-0">
                    <div class="row">
                        <div class="col-md-10 text-truncate ps-1 mb-1">
                            <a href="@item.GetFullLink()" class="text-secondary-emphasis text-decoration-none">
                                <i class="bi bi-file-text mx-1"></i> @item.Title
                            </a>
                        </div>
                        <div class="col-md-2 text-truncate small mb-1 d-grid">
                            <a class="btn btn-outline-dark btn-sm px-4" href="/admin/post-edit/@item.Id">
                                <i class="bi bi-pencil-square mx-1"></i> Edit this post
                            </a>
                        </div>
                    </div>
                </div>
                @Html.Raw(item.HtmlMetadata2)
            </div>
        }
    </div>
</div>

@section AdminLegend {
    <div class="row">
        <div class="col-12 text-truncate">
            <span><i class="bi bi-list"></i> List of Posts</span>
        </div>
    </div>
    <div class="small text-muted font-monospace">
        @allPosts.Count in total, @allPosts.Count(x => x.IsPublicToEveryOne()) of them are public to everyone.
    </div>
    
    <div class="row mt-3">
        <div class="col-md-8 mb-1">
            <input type="search" class="form-control form-control-sm" placeholder="Search..."/>
        </div>
        <div class="col-md-2 mb-1 d-none d-md-block">
            <button class="btn btn-success btn-sm w-100" id="searchBtn"><i class="bi bi-search"></i> Search</button>
        </div>
        <div class="col-md-2 mb-1">
            <a class="btn btn-light btn-sm w-100" href="/admin/post-add"><i class="bi bi-plus mx-1"></i> Add New Post</a>
        </div>
    </div>
    <div class="row mt-2 small">
        <div class="col-6">
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="sortCondition" id="sortByHit" value="data-sort-hit">
                <label class="form-check-label" for="sortByHit"><i class="bi bi-sort-down"></i> Sort by Hit</label>
            </div>
            <div class="form-check form-check-inline">
                <input class="form-check-input" type="radio" name="sortCondition" id="sortByPublishDate" value="data-sort-date" checked>
                <label class="form-check-label" for="sortByPublishDate"><i class="bi bi-sort-down"></i> Sort by Publish Date</label>
            </div>
        </div>
        <div class="col-6">
            <div class="form-check form-check-inline form-switch">
                <input class="form-check-input" type="checkbox" id="filterShowPublic" value="false" checked>
                <label class="form-check-label small" for="filterShowPublic">Show Public Only</label>
            </div>
        </div>
    </div>
}

@section Script{
    <script>
        setActive(document.querySelectorAll("[data-nav-id=navHeading_posts]"));
        const searchEle = document.querySelector("input[type='search']");
        const filterShowPublicEle = document.querySelector("#filterShowPublic");
        const filterFunc = x => {
            var showPublicOnly = filterShowPublicEle.checked;
            if(!showPublicOnly){
                return true;
            }

            return x.getAttribute("data-filter-is-public") === "@bool.TrueString";
        };
        const search = () => {
            let sortValue = document.querySelector(`input[name="sortCondition"]:checked`).value;
            let searchTxt = searchEle.value;
            searchChildren("#listWrapper", searchTxt, filterFunc, sortValue);
        };
        searchEle.addEventListener("keyup", e => {
            e.preventDefault();
            e.stopPropagation();

            if (e.key === "Enter") {
                search();
            }
        });
        document.querySelector("#searchBtn").addEventListener("click", e => {
            e.preventDefault();
            e.stopPropagation();

            search();
        });
        
        search();
    </script>
}